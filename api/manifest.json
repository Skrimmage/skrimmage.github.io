{"__page":{"path":"/","frontMatter":{"title":"Welcome to Skrimmage"},"queries":[],"content":"---\ntitle: Welcome to Skrimmage\n---\n\nSkrimmage is the all-comprehensive site for Sports Analytics and Games Research. Dive deep into a treasure trove of aggregate stats, access an extensive library of free sports data, and discover cutting-edge machine learning analysis tailored for the modern sports enthusiast. Whether you're a casual fan, a data-driven coach, or a budding analyst, Skrimmage is your ultimate destination for insights that transcend the game.\n\n---\n\nFollow me [on Mastodon](https://mastodon.skrimmage.com/@danny), or [Blue Sky](https://bsky.app/profile/danny.page). Also you can [email](mailto:danny@skrimmage.com)!"},"F1":{"__page":{"path":"/F1","frontMatter":{"title":"Formula One"},"queries":[{"id":"drivers","compiledQueryString":"select CONCAT(forename, ' ', surname) as name,dob,nationality,url\nfrom 'sources/drivers.csv'","inputQueryString":"select CONCAT(forename, ' ', surname) as name,dob,nationality,url\nfrom 'sources/drivers.csv'","compiled":false,"inline":true},{"id":"competitive_seasons","compiledQueryString":"WITH race_count\n     AS (SELECT Count(raceid) num_of_races,\n                Max(raceid)   max_race,\n                year\n         FROM   'sources/races.csv'\n         GROUP  BY year),\n     race_and_year\n     AS (SELECT r.raceid,\n                year\n         FROM   'sources/races.csv' r),\n     top_points\n     AS (SELECT ry.raceid,\n                Max(Cast(ds.points AS INT)) top_points\n         FROM   race_and_year ry,\n                'sources/driver_standings.csv' ds\n         WHERE  ry.raceid = ds.raceid\n         GROUP  BY ry.raceid),\n     race_breakdowns\n     AS (SELECT ry.*,\n                Cast(ds.points AS INT)\n                   AS points,\n                Round(( Cast(ds.points AS FLOAT) / tp.top_points ) * 100, 1)\n                   AS percent_points,\n                ( Cast(max_race AS FLOAT) - Cast(ry.raceid AS\n                FLOAT) ) / rc.num_of_races\n                   AS\n                percent_race\n         FROM   race_and_year ry,\n                'sources/driver_standings.csv' ds,\n                top_points tp,\n                race_count rc\n         WHERE  ry.raceid = ds.raceid\n                AND ry.raceid = tp.raceid\n                AND ry.year = rc.year),\n     close_driver_races\n     AS (SELECT raceid,\n                year,\n                Sum(CASE\n                      WHEN Cast(percent_points AS FLOAT) > 80 THEN 1\n                      ELSE 0\n                    END) - 1                    AS close_drivers_80,\n                Sum(CASE\n                      WHEN Cast(percent_points AS FLOAT) > 90 THEN 1\n                      ELSE 0\n                    END) - 1                    AS close_drivers_90,\n                Sum(CASE\n                      WHEN Cast(percent_points AS FLOAT) > 95 THEN 1\n                      ELSE 0\n                    END) - 1                    AS close_drivers_95,\n                percent_race * ( Sum(CASE\n                                       WHEN Cast(percent_points AS FLOAT) > 80\n                                     THEN 1\n                                       ELSE 0\n                                     END) - 1 ) AS weighted_close_drivers_80,\n                percent_race * ( Sum(CASE\n                                       WHEN Cast(percent_points AS FLOAT) > 90\n                                     THEN 1\n                                       ELSE 0\n                                     END) - 1 ) AS weighted_close_drivers_90,\n                percent_race * ( Sum(CASE\n                                       WHEN Cast(percent_points AS FLOAT) > 95\n                                     THEN 1\n                                       ELSE 0\n                                     END) - 1 ) AS weighted_close_drivers_95\n         FROM   race_breakdowns rb\n         GROUP  BY raceid, year, percent_race)\nSELECT Max(year) as year,\n       ( Sum(close_drivers_80)\n         + Sum(close_drivers_90)\n         + Sum(close_drivers_95) )             points,\n       Sum(close_drivers_95),\n       Sum(close_drivers_90),\n       Sum(close_drivers_80),\n       Round(Sum(weighted_close_drivers_95)\n             + Sum(weighted_close_drivers_90)\n             + Sum(weighted_close_drivers_80)) AS weighted_points,\n       Round(Sum(weighted_close_drivers_95)),\n       Round(Sum(weighted_close_drivers_90)),\n       Round(Sum(weighted_close_drivers_80))\nFROM   close_driver_races\nGROUP  BY year\nORDER  BY points DESC, weighted_points DESC","inputQueryString":"WITH race_count\n     AS (SELECT Count(raceid) num_of_races,\n                Max(raceid)   max_race,\n                year\n         FROM   'sources/races.csv'\n         GROUP  BY year),\n     race_and_year\n     AS (SELECT r.raceid,\n                year\n         FROM   'sources/races.csv' r),\n     top_points\n     AS (SELECT ry.raceid,\n                Max(Cast(ds.points AS INT)) top_points\n         FROM   race_and_year ry,\n                'sources/driver_standings.csv' ds\n         WHERE  ry.raceid = ds.raceid\n         GROUP  BY ry.raceid),\n     race_breakdowns\n     AS (SELECT ry.*,\n                Cast(ds.points AS INT)\n                   AS points,\n                Round(( Cast(ds.points AS FLOAT) / tp.top_points ) * 100, 1)\n                   AS percent_points,\n                ( Cast(max_race AS FLOAT) - Cast(ry.raceid AS\n                FLOAT) ) / rc.num_of_races\n                   AS\n                percent_race\n         FROM   race_and_year ry,\n                'sources/driver_standings.csv' ds,\n                top_points tp,\n                race_count rc\n         WHERE  ry.raceid = ds.raceid\n                AND ry.raceid = tp.raceid\n                AND ry.year = rc.year),\n     close_driver_races\n     AS (SELECT raceid,\n                year,\n                Sum(CASE\n                      WHEN Cast(percent_points AS FLOAT) > 80 THEN 1\n                      ELSE 0\n                    END) - 1                    AS close_drivers_80,\n                Sum(CASE\n                      WHEN Cast(percent_points AS FLOAT) > 90 THEN 1\n                      ELSE 0\n                    END) - 1                    AS close_drivers_90,\n                Sum(CASE\n                      WHEN Cast(percent_points AS FLOAT) > 95 THEN 1\n                      ELSE 0\n                    END) - 1                    AS close_drivers_95,\n                percent_race * ( Sum(CASE\n                                       WHEN Cast(percent_points AS FLOAT) > 80\n                                     THEN 1\n                                       ELSE 0\n                                     END) - 1 ) AS weighted_close_drivers_80,\n                percent_race * ( Sum(CASE\n                                       WHEN Cast(percent_points AS FLOAT) > 90\n                                     THEN 1\n                                       ELSE 0\n                                     END) - 1 ) AS weighted_close_drivers_90,\n                percent_race * ( Sum(CASE\n                                       WHEN Cast(percent_points AS FLOAT) > 95\n                                     THEN 1\n                                       ELSE 0\n                                     END) - 1 ) AS weighted_close_drivers_95\n         FROM   race_breakdowns rb\n         GROUP  BY raceid, year, percent_race)\nSELECT Max(year) as year,\n       ( Sum(close_drivers_80)\n         + Sum(close_drivers_90)\n         + Sum(close_drivers_95) )             points,\n       Sum(close_drivers_95),\n       Sum(close_drivers_90),\n       Sum(close_drivers_80),\n       Round(Sum(weighted_close_drivers_95)\n             + Sum(weighted_close_drivers_90)\n             + Sum(weighted_close_drivers_80)) AS weighted_points,\n       Round(Sum(weighted_close_drivers_95)),\n       Round(Sum(weighted_close_drivers_90)),\n       Round(Sum(weighted_close_drivers_80))\nFROM   close_driver_races\nGROUP  BY year\nORDER  BY points DESC, weighted_points DESC","compiled":false,"inline":true}],"content":"---\ntitle: Formula One\n---\n\n\n## TODO:\n- Add winners instead of Wikipedia link on the index page\n- Move that into the detail page\n- Add current standings on this page\n\n\n---\n\n```sql drivers\nselect CONCAT(forename, ' ', surname) as name,dob,nationality,url\nfrom 'sources/drivers.csv'\n```\n\n```sql competitive_seasons\nWITH race_count\n     AS (SELECT Count(raceid) num_of_races,\n                Max(raceid)   max_race,\n                year\n         FROM   'sources/races.csv'\n         GROUP  BY year),\n     race_and_year\n     AS (SELECT r.raceid,\n                year\n         FROM   'sources/races.csv' r),\n     top_points\n     AS (SELECT ry.raceid,\n                Max(Cast(ds.points AS INT)) top_points\n         FROM   race_and_year ry,\n                'sources/driver_standings.csv' ds\n         WHERE  ry.raceid = ds.raceid\n         GROUP  BY ry.raceid),\n     race_breakdowns\n     AS (SELECT ry.*,\n                Cast(ds.points AS INT)\n                   AS points,\n                Round(( Cast(ds.points AS FLOAT) / tp.top_points ) * 100, 1)\n                   AS percent_points,\n                ( Cast(max_race AS FLOAT) - Cast(ry.raceid AS\n                FLOAT) ) / rc.num_of_races\n                   AS\n                percent_race\n         FROM   race_and_year ry,\n                'sources/driver_standings.csv' ds,\n                top_points tp,\n                race_count rc\n         WHERE  ry.raceid = ds.raceid\n                AND ry.raceid = tp.raceid\n                AND ry.year = rc.year),\n     close_driver_races\n     AS (SELECT raceid,\n                year,\n                Sum(CASE\n                      WHEN Cast(percent_points AS FLOAT) > 80 THEN 1\n                      ELSE 0\n                    END) - 1                    AS close_drivers_80,\n                Sum(CASE\n                      WHEN Cast(percent_points AS FLOAT) > 90 THEN 1\n                      ELSE 0\n                    END) - 1                    AS close_drivers_90,\n                Sum(CASE\n                      WHEN Cast(percent_points AS FLOAT) > 95 THEN 1\n                      ELSE 0\n                    END) - 1                    AS close_drivers_95,\n                percent_race * ( Sum(CASE\n                                       WHEN Cast(percent_points AS FLOAT) > 80\n                                     THEN 1\n                                       ELSE 0\n                                     END) - 1 ) AS weighted_close_drivers_80,\n                percent_race * ( Sum(CASE\n                                       WHEN Cast(percent_points AS FLOAT) > 90\n                                     THEN 1\n                                       ELSE 0\n                                     END) - 1 ) AS weighted_close_drivers_90,\n                percent_race * ( Sum(CASE\n                                       WHEN Cast(percent_points AS FLOAT) > 95\n                                     THEN 1\n                                       ELSE 0\n                                     END) - 1 ) AS weighted_close_drivers_95\n         FROM   race_breakdowns rb\n         GROUP  BY raceid, year, percent_race)\nSELECT Max(year) as year,\n       ( Sum(close_drivers_80)\n         + Sum(close_drivers_90)\n         + Sum(close_drivers_95) )             points,\n       Sum(close_drivers_95),\n       Sum(close_drivers_90),\n       Sum(close_drivers_80),\n       Round(Sum(weighted_close_drivers_95)\n             + Sum(weighted_close_drivers_90)\n             + Sum(weighted_close_drivers_80)) AS weighted_points,\n       Round(Sum(weighted_close_drivers_95)),\n       Round(Sum(weighted_close_drivers_90)),\n       Round(Sum(weighted_close_drivers_80))\nFROM   close_driver_races\nGROUP  BY year\nORDER  BY points DESC, weighted_points DESC \n\n```\n\n## Most Competitive Seasons\n\nPoints is a calculation of the number of drivers within 80%, 90%, and 95% of the leader at each race. A driver being within 5% points of the leader counts as 3, 90%->2 points, 80%->1 point. \"Weighted Points\" gives more points for it happening later in the season, so a final race clash is weighted more than early races. The race 25% into the season gives 0.25 points per driver, while the last race gives 1 point per driver. This is not a very scientific algorithm, but hopefully it highlights the most exciting seasons in F1 for those who want to go and watch historical seasons on F1TV.\n\n- 2010 was the most competitive season, with 4 drivers potentially taking the championship in the final race. \n- 2012 had 7 different winners in the first 7 races, keeping the pack tight early, and resulting in a tight 2 way battle into the final race. \n- 2021 was a duel between Hamilton and Verstappen, which was tied going into the final race of the season and ending in _spectacular_ fashion. \n\n<DataTable data=\"{competitive_seasons}\">\n    <Column id=\"year\" title=\"Season\" />\n    <Column id=\"points\" />\n    <Column id=\"weighted_points\" />\n</DataTable>\n\n---\n\nData via [Ergast Motor Racing Development API](https://ergast.com/mrd/) for now. It is being deprecated after the 2024 season, and Skrimmage will look into getting the data directly from the FIA in the future. \n\n"},"circuits":{"__page":{"path":"/F1/circuits","frontMatter":{"title":"F1 Circuits","sources":[{"circuits":"f1/circuits.sql"}]},"queries":[{"id":"circuits","compiledQueryString":"select \n    circuitId,\n    circuitRef,\n    name,\n    location,\n    country,\n    lat,\n    lng,\n    alt,\n    url,\n    './' || circuitRef as circuit_link\nfrom 'sources/circuits.csv'","inputQueryString":"select \n    circuitId,\n    circuitRef,\n    name,\n    location,\n    country,\n    lat,\n    lng,\n    alt,\n    url,\n    './' || circuitRef as circuit_link\nfrom 'sources/circuits.csv'","compiled":false,"inline":false}],"content":"---\ntitle: F1 Circuits\nsources:\n  - circuits: f1/circuits.sql\n---\n\n## List of Circuits\n\n<DataTable data=\"{circuits}\" search=\"true\" link=circuit_link>\n    <Column id=\"name\" title=\"Name\" />\n    <Column id=\"location\" title=\"Location\" />\n    <Column id=\"country\" title=\"Country\" />\n    <Column id=\"url\" title=\"Wikipedia\" contentType=\"link\" openInNewTab=\"true\" />\n</DataTable>\n"},"[circuitRef]":{"__page":{"path":"/F1/circuits/[circuitRef]","frontMatter":{"sources":[{"circuits":"f1/circuits.sql"}]},"queries":[{"id":"circuits","compiledQueryString":"select \n    circuitId,\n    circuitRef,\n    name,\n    location,\n    country,\n    lat,\n    lng,\n    alt,\n    url,\n    './' || circuitRef as circuit_link\nfrom 'sources/circuits.csv'","inputQueryString":"select \n    circuitId,\n    circuitRef,\n    name,\n    location,\n    country,\n    lat,\n    lng,\n    alt,\n    url,\n    './' || circuitRef as circuit_link\nfrom 'sources/circuits.csv'","compiled":false,"inline":false}],"content":"---\nsources:\n  - circuits: f1/circuits.sql\n---\n\n# <Value data={circuits.filter(d => d.circuitRef.toUpperCase() === $page.params.circuitRef.toUpperCase())} column=name/>\n\n<DataTable data=\"{circuits.filter(d => d.circuitRef.toUpperCase() === $page.params.circuitRef.toUpperCase())}\">\n    <Column id=\"name\" title=\"Name\" />\n    <Column id=\"location\" title=\"Location\" />\n    <Column id=\"country\" title=\"Country\" />\n    <Column id=\"url\" title=\"Wikipedia\" contentType=\"link\" openInNewTab=\"true\" />\n</DataTable>\n"}}},"drivers":{"__page":{"path":"/F1/drivers","frontMatter":{"title":"F1 Drivers","sources":[{"drivers":"f1/drivers.sql"}]},"queries":[{"id":"drivers","compiledQueryString":"select \n    CONCAT(forename, ' ', surname) as name,\n    dob,\n    nationality,\n    url,\n    driverRef,\n    './' || driverRef as driver_link\nfrom 'sources/drivers.csv'","inputQueryString":"select \n    CONCAT(forename, ' ', surname) as name,\n    dob,\n    nationality,\n    url,\n    driverRef,\n    './' || driverRef as driver_link\nfrom 'sources/drivers.csv'","compiled":false,"inline":false}],"content":"---\ntitle: F1 Drivers\nsources:\n  - drivers: f1/drivers.sql\n---\n\n## List of drivers\n\n<DataTable data=\"{drivers}\" search=\"true\" link=driver_link>\n    <Column id=\"name\" title=\"Name\" />\n    <Column id=\"dob\" title=\"Date Of Birth\" />\n    <Column id=\"nationality\" title=\"Nationality\" />\n    <Column id=\"url\" title=\"Wikipedia\" contentType=\"link\" openInNewTab=\"true\" />\n</DataTable>\n"},"[driverRef]":{"__page":{"path":"/F1/drivers/[driverRef]","frontMatter":{"sources":[{"drivers":"f1/drivers.sql"}]},"queries":[{"id":"drivers","compiledQueryString":"select \n    CONCAT(forename, ' ', surname) as name,\n    dob,\n    nationality,\n    url,\n    driverRef,\n    './' || driverRef as driver_link\nfrom 'sources/drivers.csv'","inputQueryString":"select \n    CONCAT(forename, ' ', surname) as name,\n    dob,\n    nationality,\n    url,\n    driverRef,\n    './' || driverRef as driver_link\nfrom 'sources/drivers.csv'","compiled":false,"inline":false}],"content":"---\nsources:\n  - drivers: f1/drivers.sql\n---\n\n# <Value data={drivers.filter(d => d.driverRef.toUpperCase() === $page.params.driverRef.toUpperCase())} column=name/>\n\n<DataTable data=\"{drivers.filter(d => d.driverRef.toUpperCase() === $page.params.driverRef.toUpperCase())}\">\n    <Column id=\"name\" title=\"Name\" />\n    <Column id=\"dob\" title=\"Date Of Birth\" />\n    <Column id=\"nationality\" title=\"Nationality\" />\n    <Column id=\"url\" title=\"Wikipedia\" contentType=\"link\" openInNewTab=\"true\" />\n</DataTable>\n"}}},"races":{"__page":{"path":"/F1/races","frontMatter":{"title":"F1 Races"},"queries":[{"id":"current_races","compiledQueryString":"select *,\n'./' || year || '_' || REPLACE(name, ' ', '_') as race_link\nfrom 'sources/races.csv'\nwhere year = 2023\norder by date;","inputQueryString":"select *,\n'./' || year || '_' || REPLACE(name, ' ', '_') as race_link\nfrom 'sources/races.csv'\nwhere year = 2023\norder by date;","compiled":false,"inline":true}],"content":"---\ntitle: F1 Races\n---\n\n## Current Schedule\n\n```sql current_races\nselect *,\n'./' || year || '_' || REPLACE(name, ' ', '_') as race_link\nfrom 'sources/races.csv'\nwhere year = 2023\norder by date;\n```\n\n<DataTable data=\"{current_races}\" search=\"true\" link=race_link rows=all>\n    <Column id=\"name\" title=\"Name\" />\n    <Column id=\"date\" title=\"Date\" />\n    <Column id=\"url\" title=\"Wikipedia\" contentType=\"link\" openInNewTab=\"true\" />\n</DataTable>\n\n[All historical races](./historical_races)"},"[year_race_name]":{"__page":{"path":"/F1/races/[year_race_name]","queries":[{"id":"races","compiledQueryString":"select *,\nyear || '_' || REPLACE(name, ' ', '_') as year_race_name,\nname || ' - ' || year as name_year,\n'./' || year || '_' || REPLACE(name, ' ', '_') as race_link\nfrom 'sources/races.csv'\norder by date;","inputQueryString":"select *,\nyear || '_' || REPLACE(name, ' ', '_') as year_race_name,\nname || ' - ' || year as name_year,\n'./' || year || '_' || REPLACE(name, ' ', '_') as race_link\nfrom 'sources/races.csv'\norder by date;","compiled":false,"inline":true}],"content":"# <Value data={races.filter(r => r.year_race_name === $page.params.year_race_name)} column=name_year/>\n\n```sql races\nselect *,\nyear || '_' || REPLACE(name, ' ', '_') as year_race_name,\nname || ' - ' || year as name_year,\n'./' || year || '_' || REPLACE(name, ' ', '_') as race_link\nfrom 'sources/races.csv'\norder by date;\n```"}},"historical_races":{"__page":{"path":"/F1/races/historical_races","queries":[{"id":"all_races","compiledQueryString":"select *,\n'/F1/races/' || year || '_' || REPLACE(name, ' ', '_') as race_link\nfrom 'sources/races.csv'\norder by date;","inputQueryString":"select *,\n'/F1/races/' || year || '_' || REPLACE(name, ' ', '_') as race_link\nfrom 'sources/races.csv'\norder by date;","compiled":false,"inline":true}],"content":"## All Races\n\n```sql all_races\nselect *,\n'/F1/races/' || year || '_' || REPLACE(name, ' ', '_') as race_link\nfrom 'sources/races.csv'\norder by date;\n```\n\n<DataTable data=\"{all_races}\" search=\"true\" link=race_link rows=20>\n    <Column id=\"name\" title=\"Name\" />\n    <Column id=\"date\" title=\"Date\" />\n    <Column id=\"url\" title=\"Wikipedia\" contentType=\"link\" openInNewTab=\"true\" />\n</DataTable>\n\n\n\n"}}}},"NHL":{"__page":{"path":"/NHL","frontMatter":{"title":"NHL Data"},"queries":[],"content":"---\ntitle: NHL Data\n---\n\n## TODO\n\n- Populate outline directory, see F1"},"teams":{"__page":{"path":"/NHL/teams","frontMatter":{"title":"NHL Teams"},"queries":[],"content":"---\ntitle: NHL Teams\n---\n"}}}}